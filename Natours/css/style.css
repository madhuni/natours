/* Mixin for clearfix */
/*
COLORS:
Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/
/* backgroud color for section */
/* Fonts */
/* Variables for Grid System for the project */
/* Defining animations for the heading */
/* For primary heading */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* For sub heading */
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* Adding moving animation for the button when the page reloads */
@keyframes moveInButton {
  0% {
    opacity: 0;
    transform: translateY(5rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* Resetting the browser properties (without Normalize.css) */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /* Inheriting the 'box-sizing' property where it is defined (in body) */ }

/* Converting all the 'px' unit to 'rem' which is going to be the 'root font-size' */
/* Declaring the root font-size first */
html {
  /* 
    Here we are setting the default value in 'px' and it will remain the same if user changes it.
    So we are going to change the way to declare the root font size based on the default
    User-agent font-size which is '16px'.
    The root font-size will still be the 10px but in '%' i.e. 10(which we want)/16(default)=62.5%
    So this % defines what 1rem is and is a global style
  */
  /* font-size: 10px; */
  font-size: 62.5%; }

body {
  /* Defining the box-sizing in the body element and then inheritig this is '*' selector */
  box-sizing: border-box; }

body {
  /* Font releated resets will always go in the 'body' */
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  /* Means line-height is the 1.7 times of pre-defined line-height */
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* Fix for the shaking of object when the animation ends */
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    /* 
    In order to apply letter-spacing with text-align as center
    we will need to give the same amount of 'text-indent' as 'letter-spacing'
    */
    letter-spacing: 3.5rem;
    text-align: center;
    text-indent: 3.5rem;
    /* For setting animation we need to define 2 basic properties */
    animation-name: moveInLeft;
    animation-duration: 1.5s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.4rem;
    text-align: center;
    text-indent: 1.4rem;
    animation: moveInRight 1.5s ease-out; }

.heading-secondary {
  display: inline-block;
  font-size: 3.5rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: .2rem;
  /* To clip the background image according to the text */
  background-clip: text;
  -webkit-background-clip: text;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  color: transparent;
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

/* Defining the utility classes to be used in the project */
.u-text-center {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-top-big {
  margin-top: 8rem; }

.u-margin-top-huge {
  margin-top: 10rem; }

/* Button */
.btn {
  /* Adding infinite animation on btn-hover */
  /* This should go behind the original button */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scale(1.2) scale(1.4);
      /* corresponds to X and Y directions */
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--green {
    background-color: #55c57a;
    color: #fff; }
    .btn--green::after {
      background-color: #55c57a; }
  .btn--animated {
    animation: moveInButton .6s ease-out .75s;
    /*
      This particular property will apply the values of 0% when the animation starts
      So the btn will practically be invisible for the delay period of .75s and then will
      appear from it's 0% styles
    */
    animation-fill-mode: backwards; }
  .btn::after {
    content: "";
    width: 100%;
    /* 100% of the btn-element */
    height: 100%;
    /* 100% of the btn-element */
    border-radius: 10rem;
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  text-decoration: none;
  /* When the values are very small we can use 'px' for the values */
  border-bottom: 1px solid #55c57a;
  padding: 5px;
  transition: all .2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(-0.5px); }

/* Styles for the background video */
.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  opacity: .2;
  width: 100%;
  height: 100%;
  overflow: hidden; }
  .bg-video__content {
    width: 100%;
    height: 100%;
    object-fit: cover; }

/* Styles for the Card */
.card {
  position: relative;
  width: 100%;
  height: 51rem;
  /* Perspective property should always be given to the parent element */
  perspective: 150rem;
  -moz-perspective: 150rem;
  -webkit-perspective: 150rem;
  /* Styling for the Front-side */
  /* Styling for the Back-side */ }
  .card__side {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 51rem;
    border-radius: 2px;
    box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.15);
    transition: all .8s ease;
    /* This will only show the front-side of each card */
    backface-visibility: hidden; }
    .card__side--front {
      background-color: white; }
    .card__side--back {
      /* Rotating the back card to 180deg in initial state */
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card__side--back-3 {
        background: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg);
    -webkit-transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    /* Rotating the back card to 0deg when hover on the card */
    transform: rotateY(0deg);
    -webkit-transform: rotateY(0deg); }
  .card__picture {
    height: 13em;
    background-blend-mode: screen;
    background-size: cover;
    border-radius: 2px;
    overflow: hidden;
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%); }
    .card__picture--1 {
      background-image: linear-gradient(#ffb900, #ff7730), url(../img/nat-5.jpg); }
    .card__picture--2 {
      background-image: linear-gradient(#7ed56f, #28b485), url(../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(#2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    color: #fff;
    text-transform: uppercase;
    text-align: right;
    position: absolute;
    top: 10rem;
    right: 2rem;
    width: 75%; }
  .card__heading-span {
    padding: 1.2rem 1rem;
    box-decoration-break: clone;
    -webkit-box-decoration-break: clone; }
    .card__heading-span--1 {
      background: linear-gradient(to right bottom, rgba(255, 185, 0, 0.8), rgba(255, 119, 48, 0.8)); }
    .card__heading-span--2 {
      background: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)); }
    .card__heading-span--3 {
      background: linear-gradient(to right bottom, rgba(41, 152, 255, 0.8), rgba(86, 67, 250, 0.8)); }
  .card__details {
    padding: 3rem; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card__cta {
    width: 90%;
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }
  .card__price-box {
    color: #fff;
    text-align: center; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }

/* Styles for images compostion goes here */
.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    position: absolute;
    z-index: 10;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.5);
    border-radius: 2px;
    outline-offset: 1.5rem;
    transition: all .2s; }
    .composition__photo--p1 {
      top: -2rem;
      left: 0; }
    .composition__photo--p2 {
      top: 2rem;
      right: 0; }
    .composition__photo--p3 {
      top: 10rem;
      left: 12rem; }
    .composition__photo:hover {
      transform: scale(1.1) translateY(-0.5rem);
      z-index: 11;
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      outline: 1.5rem solid #55c57a; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.9); }

.feature-box {
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  background-color: rgba(255, 255, 255, 0.8);
  transition: transform .3s;
  backface-visibility: hidden; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }
  .feature-box__icon {
    display: inline-block;
    font-size: 6rem;
    margin-bottom: .5rem;
    background-image: linear-gradient(to right, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8));
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent; }

/* Styles for the 'form' component */
.form {
  /*
    '+' selector is used to select the adjacent sibling
    '~' selector is used to select the sibling with more layers
  */ }
  .form__group:not(:last-child) {
    margin-bottom: 2rem; }
  .form__input {
    /* Input fields doesn't inherit the font-family by default */
    font-family: inherit;
    color: inherit;
    font-size: 1.5rem;
    width: 90%;
    display: block;
    border: 0;
    border-bottom: 3px solid transparent;
    border-radius: 3px;
    padding: 1rem 2rem;
    background-color: rgba(255, 255, 255, 0.5);
    transition: all .3s;
    /* Using HTML5 native 'validation' */
    /* Sudo selector for the placeholder */ }
    .form__input:focus {
      outline: none;
      -moz-outline: none;
      -webkit-outline: none;
      box-shadow: 0rem 1rem 2rem rgba(0, 0, 0, 0.15);
      border-bottom: 3px solid #55c57a; }
    .form__input:focus:invalid {
      border-bottom: 3px solid orangered; }
    .form__input::-webkit-input-placeholder {
      color: #777; }
  .form__label {
    display: block;
    font-family: inherit;
    color: inherit;
    font-size: 1.3rem;
    font-weight: 700;
    margin: .7rem 0 0 2rem;
    transition: all .3s; }
  .form__input:placeholder-shown + .form__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem); }

/* Styles for the user stories */
.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.8);
  padding: 6rem 9rem 6rem 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg); }
  .story > * {
    transform: skewX(12deg); }
  .story__shape {
    position: relative;
    width: 15rem;
    height: 15rem;
    background-color: orange;
    float: left;
    /* New shape outside property to give shapes to elements 
    This property requires the 'float', 'height' and 'width' 
    of the element in order to work */
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    -webkit-clip-path: circle(50% at 50% 50%);
    /* When we need to give space around a float element,
    the best pracitce is not to give any padding or margin
    instead 'translate' that with the required value */
    transform: translateX(-3rem) skewX(12deg);
    overflow: hidden; }
  .story__image {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    transition: all .5s;
    filter: blur(0) brightness(100%);
    backface-visibility: hidden; }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    opacity: 0;
    color: #fff;
    text-transform: uppercase;
    text-align: center;
    transition: all .5s;
    backface-visibility: hidden; }
  .story:hover .story__caption {
    opacity: 1;
    transform: translate(-50%, -50%); }
  .story:hover .story__image {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%);
    -webkit-filter: blur(3px) brightness(80%); }

/* Adding styles for the Custrom Grids for our project */
.row {
  max-width: 114rem;
  margin: 0 auto;
  /* Removing the backgroudn color from each row */
  /* Setting the margin-bottom to every row except the last row element */
  /* Using the attribute selector to assign styles to each column */ }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row [class^="col-"] {
    float: left;
    /* Commenting the properties for testing purposes */ }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3* 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3* 6rem) / 4) + 6rem); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3* 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3* 6rem) / 4) + 2 * 6rem); }

/* Styling the header for the web-page */
.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.9), rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.9)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  background-repeat: no-repeat;
  position: relative;
  /* New technique to clip the path of the elements based on the coordinates */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-container {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.section-about {
  padding: 25rem 0;
  margin-top: -20vh;
  background-color: #f7f7f7; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  background-position: center;
  /* Scewing the entire section instead of using 'clip-path' */
  transform: skewY(-7deg);
  /* Giving margin top of negative value to cover the remaining white space */
  margin-top: -10rem;
  /* In order to unskew the child elements, we will skew the 
  direct-child in same amount but in reverse direction */ }
  .section-features > * {
    transform: skewY(7deg); }

.section-tours {
  padding: 20rem 0 15rem;
  margin-top: -10rem;
  background-color: #f7f7f7; }

.section-stories {
  padding: 15rem 0;
  position: relative; }

.section-book {
  padding: 15rem 0;
  position: relative;
  background: linear-gradient(to right bottom, #7ed56f, #28b485); }

.book {
  height: 50rem;
  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 50%, transparent 50%), url(../img/nat-10.jpg);
  background-size: 100%;
  border-radius: 3px;
  box-shadow: 0 2rem 6rem rgba(0, 0, 0, 0.4); }
  .book__form {
    width: 50%;
    padding: 6rem; }
